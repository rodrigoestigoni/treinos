version: '3.8'

services:
  # Serviço frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./frontend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - /app/node_modules
    ports:
      - "8551:80"
      - "8552:443"
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000/api/v1
    container_name: treinos_frontend
    networks:
      - app_net

  # Serviço backend
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "8550:8000"
    env_file:
      - ./.env    
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=True
      - SECRET_KEY=development_secret_key
      - DB_NAME=califit
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6381
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,treinos.ultimoingresso.com.br
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000,https://treinos.ultimoingresso.com.br
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    container_name: treinos_backend
    networks:
      - app_net

  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=califit
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    networks:
      - app_net

  # Redis para cache e channels
  redis:
    image: redis:7-alpine
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_net

  # Celery worker para tarefas assíncronas
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    entrypoint: /celery-entrypoint.sh
    volumes:
      - ./backend:/app
      - ./backend/celery-entrypoint.sh:/celery-entrypoint.sh
    depends_on:
      - backend
      - redis
    environment:
      - DEBUG=True
      - SECRET_KEY=development_secret_key
      - DB_NAME=califit
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6381
    networks:
      - app_net

  # Celery beat para tarefas agendadas
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    entrypoint: /celery-beat-entrypoint.sh
    volumes:
      - ./backend:/app
      - ./backend/celery-beat-entrypoint.sh:/celery-beat-entrypoint.sh
    depends_on:
      - backend
      - redis
    environment:
      - DEBUG=True
      - SECRET_KEY=development_secret_key
      - DB_NAME=califit
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6381
    networks:
      - app_net

volumes:
  postgres_data:
  redis_data:

networks:
  app_net:
    external: true